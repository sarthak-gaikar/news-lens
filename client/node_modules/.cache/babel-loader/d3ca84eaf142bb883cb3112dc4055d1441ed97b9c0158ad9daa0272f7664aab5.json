{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\NEWSLENS\\\\client\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { authService } from '../services/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [showLoginModal, setShowLoginModal] = useState(false);\n  const [showRegisterModal, setShowRegisterModal] = useState(false);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      authService.getProfile().then(userData => {\n        setUser(userData);\n      }).catch(error => {\n        console.error('Auth error:', error);\n        localStorage.removeItem('token');\n      }).finally(() => {\n        setLoading(false);\n      });\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await authService.login(email, password);\n      setUser(response.user);\n      localStorage.setItem('token', response.token);\n      setShowLoginModal(false);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      return {\n        success: false,\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed. Please try again.'\n      };\n    }\n  };\n  const register = async (username, email, password) => {\n    try {\n      const response = await authService.register(username, email, password);\n      setUser(response.user);\n      localStorage.setItem('token', response.token);\n      setShowRegisterModal(false);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      return {\n        success: false,\n        message: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed. Please try again.'\n      };\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('token');\n  };\n\n  // --- THIS IS THE FIX ---\n  // This function allows other components to update the user object in the global state.\n  const updateUser = newUserData => {\n    // Merge the new data with the existing user data. This prevents properties \n    // like 'username' and 'email' from being lost if the API only returns partial data.\n    setUser(prevUser => ({\n      ...prevUser,\n      ...newUserData\n    }));\n  };\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    updateUser,\n    // Add the updateUser function to the context value\n    showLoginModal,\n    setShowLoginModal,\n    showRegisterModal,\n    setShowRegisterModal\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: [\"\\xA0 \\xA0 \\xA0 \", !loading && children, \"\\xA0 \\xA0 \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"vgXJnGuZVqy3i8Qu6YZ3dBPPFxM=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","authService","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","showLoginModal","setShowLoginModal","showRegisterModal","setShowRegisterModal","token","localStorage","getItem","getProfile","then","userData","catch","error","console","removeItem","finally","login","email","password","response","setItem","success","_error$response","_error$response$data","message","data","register","username","_error$response2","_error$response2$data","logout","updateUser","newUserData","prevUser","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Projects/NEWSLENS/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport { authService } from '../services/auth';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [showLoginModal, setShowLoginModal] = useState(false);\r\n  const [showRegisterModal, setShowRegisterModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      authService.getProfile()\r\n        .then(userData => {\r\n          setUser(userData);\r\n        })\r\n        .catch((error) => {\r\n          console.error('Auth error:', error);\r\n          localStorage.removeItem('token');\r\n        })\r\n        .finally(() => {\r\n          setLoading(false);\r\n        });\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await authService.login(email, password);\r\n      setUser(response.user);\r\n      localStorage.setItem('token', response.token);\r\n      setShowLoginModal(false);\r\n      return { success: true };\r\n    } catch (error) {\r\n      return { \r\n        success: false, \r\n        message: error.response?.data?.message || 'Login failed. Please try again.' \r\n      };\r\n    }\r\n  };\r\n\r\n  const register = async (username, email, password) => {\r\n    try {\r\n      const response = await authService.register(username, email, password);\r\n      setUser(response.user);\r\n      localStorage.setItem('token', response.token);\r\n      setShowRegisterModal(false);\r\n      return { success: true };\r\n    } catch (error) {\r\n      return { \r\n        success: false, \r\n        message: error.response?.data?.message || 'Registration failed. Please try again.' \r\n      };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem('token');\r\n  };\r\n\r\n  // --- THIS IS THE FIX ---\r\n  // This function allows other components to update the user object in the global state.\r\n  const updateUser = (newUserData) => {\r\n    // Merge the new data with the existing user data. This prevents properties \r\n    // like 'username' and 'email' from being lost if the API only returns partial data.\r\n    setUser(prevUser => ({\r\n      ...prevUser,\r\n      ...newUserData,\r\n    }));\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateUser, // Add the updateUser function to the context value\r\n    showLoginModal,\r\n    setShowLoginModal,\r\n    showRegisterModal,\r\n    setShowRegisterModal\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}