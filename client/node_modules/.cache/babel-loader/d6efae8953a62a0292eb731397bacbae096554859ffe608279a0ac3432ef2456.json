{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\NEWSLENS\\\\client\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { authService } from '../services/auth';\nimport { newsService } from '../services/news'; // --- ADDED ---\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [showLoginModal, setShowLoginModal] = useState(false);\n  const [showRegisterModal, setShowRegisterModal] = useState(false);\n  const reFetchUser = async () => {\n    try {\n      const userData = await authService.getProfile();\n      setUser(userData);\n    } catch (error) {\n      console.error('Failed to fetch user profile:', error);\n      logout();\n    }\n  };\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      reFetchUser().finally(() => {\n        setLoading(false);\n      });\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await authService.login(email, password);\n      setUser(response.user); // This now includes liked/saved arrays\n      localStorage.setItem('token', response.token);\n      setShowLoginModal(false);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      return {\n        success: false,\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed. Please try again.'\n      };\n    }\n  };\n  const register = async (username, email, password) => {\n    try {\n      const response = await authService.register(username, email, password);\n      setUser(response.user); // This now includes liked/saved arrays\n      localStorage.setItem('token', response.token);\n      setShowRegisterModal(false);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      return {\n        success: false,\n        message: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed. Please try again.'\n      };\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('token');\n  };\n\n  // --- NEW INTERACTION HELPERS ---\n\n  const isArticleLiked = articleId => {\n    var _user$likedArticles;\n    return (user === null || user === void 0 ? void 0 : (_user$likedArticles = user.likedArticles) === null || _user$likedArticles === void 0 ? void 0 : _user$likedArticles.includes(articleId)) || false;\n  };\n  const isArticleSaved = articleId => {\n    var _user$savedArticles;\n    return (user === null || user === void 0 ? void 0 : (_user$savedArticles = user.savedArticles) === null || _user$savedArticles === void 0 ? void 0 : _user$savedArticles.includes(articleId)) || false;\n  };\n\n  // --- NEW INTERACTION HANDLERS ---\n\n  const toggleLike = async articleId => {\n    if (!user) return;\n\n    // Optimistic UI Update: Update state first\n    const originalUser = {\n      ...user\n    };\n    const isLiked = isArticleLiked(articleId);\n    const newLikedArticles = isLiked ? user.likedArticles.filter(id => id !== articleId) : [...user.likedArticles, articleId];\n    setUser(prevUser => ({\n      ...prevUser,\n      likedArticles: newLikedArticles\n    }));\n\n    // Then, call the API\n    try {\n      await newsService.toggleInteraction(articleId, 'like');\n    } catch (error) {\n      console.error('Failed to toggle like:', error);\n      setUser(originalUser); // Rollback on error\n    }\n  };\n  const toggleSave = async articleId => {\n    if (!user) return;\n\n    // Optimistic UI Update\n    const originalUser = {\n      ...user\n    };\n    const isSaved = isArticleSaved(articleId);\n    const newSavedArticles = isSaved ? user.savedArticles.filter(id => id !== articleId) : [...user.savedArticles, articleId];\n    setUser(prevUser => ({\n      ...prevUser,\n      savedArticles: newSavedArticles\n    }));\n\n    // API call\n    try {\n      await newsService.toggleInteraction(articleId, 'save');\n    } catch (error) {\n      console.error('Failed to toggle save:', error);\n      setUser(originalUser); // Rollback\n    }\n  };\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    reFetchUser,\n    showLoginModal,\n    setShowLoginModal,\n    showRegisterModal,\n    setShowRegisterModal,\n    // --- ADD NEW VALUES ---\n    isArticleLiked,\n    isArticleSaved,\n    toggleLike,\n    toggleSave\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"vgXJnGuZVqy3i8Qu6YZ3dBPPFxM=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","authService","newsService","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","showLoginModal","setShowLoginModal","showRegisterModal","setShowRegisterModal","reFetchUser","userData","getProfile","error","console","logout","token","localStorage","getItem","finally","login","email","password","response","setItem","success","_error$response","_error$response$data","message","data","register","username","_error$response2","_error$response2$data","removeItem","isArticleLiked","articleId","_user$likedArticles","likedArticles","includes","isArticleSaved","_user$savedArticles","savedArticles","toggleLike","originalUser","isLiked","newLikedArticles","filter","id","prevUser","toggleInteraction","toggleSave","isSaved","newSavedArticles","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Projects/NEWSLENS/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport { authService } from '../services/auth';\r\nimport { newsService } from '../services/news'; // --- ADDED ---\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [showLoginModal, setShowLoginModal] = useState(false);\r\n  const [showRegisterModal, setShowRegisterModal] = useState(false);\r\n\r\n  const reFetchUser = async () => {\r\n    try {\r\n      const userData = await authService.getProfile();\r\n      setUser(userData);\r\n    } catch (error) {\r\n      console.error('Failed to fetch user profile:', error);\r\n      logout();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      reFetchUser().finally(() => {\r\n        setLoading(false);\r\n      });\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await authService.login(email, password);\r\n      setUser(response.user); // This now includes liked/saved arrays\r\n      localStorage.setItem('token', response.token);\r\n      setShowLoginModal(false);\r\n      return { success: true };\r\n    } catch (error) {\r\n      return { \r\n        success: false, \r\n        message: error.response?.data?.message || 'Login failed. Please try again.' \r\n      };\r\n    }\r\n  };\r\n\r\n  const register = async (username, email, password) => {\r\n    try {\r\n      const response = await authService.register(username, email, password);\r\n      setUser(response.user); // This now includes liked/saved arrays\r\n      localStorage.setItem('token', response.token);\r\n      setShowRegisterModal(false);\r\n      return { success: true };\r\n    } catch (error) {\r\n      return { \r\n        success: false, \r\n        message: error.response?.data?.message || 'Registration failed. Please try again.' \r\n      };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem('token');\r\n  };\r\n\r\n  // --- NEW INTERACTION HELPERS ---\r\n\r\n  const isArticleLiked = (articleId) => {\r\n    return user?.likedArticles?.includes(articleId) || false;\r\n  };\r\n\r\n  const isArticleSaved = (articleId) => {\r\n    return user?.savedArticles?.includes(articleId) || false;\r\n  };\r\n\r\n  // --- NEW INTERACTION HANDLERS ---\r\n\r\n  const toggleLike = async (articleId) => {\r\n    if (!user) return;\r\n    \r\n    // Optimistic UI Update: Update state first\r\n    const originalUser = { ...user };\r\n    const isLiked = isArticleLiked(articleId);\r\n    \r\n    const newLikedArticles = isLiked\r\n      ? user.likedArticles.filter(id => id !== articleId)\r\n      : [...user.likedArticles, articleId];\r\n\r\n    setUser(prevUser => ({\r\n      ...prevUser,\r\n      likedArticles: newLikedArticles\r\n    }));\r\n\r\n    // Then, call the API\r\n    try {\r\n      await newsService.toggleInteraction(articleId, 'like');\r\n    } catch (error) {\r\n      console.error('Failed to toggle like:', error);\r\n      setUser(originalUser); // Rollback on error\r\n    }\r\n  };\r\n\r\n  const toggleSave = async (articleId) => {\r\n    if (!user) return;\r\n    \r\n    // Optimistic UI Update\r\n    const originalUser = { ...user };\r\n    const isSaved = isArticleSaved(articleId);\r\n\r\n    const newSavedArticles = isSaved\r\n      ? user.savedArticles.filter(id => id !== articleId)\r\n      : [...user.savedArticles, articleId];\r\n\r\n    setUser(prevUser => ({\r\n      ...prevUser,\r\n      savedArticles: newSavedArticles\r\n    }));\r\n\r\n    // API call\r\n    try {\r\n      await newsService.toggleInteraction(articleId, 'save');\r\n    } catch (error) {\r\n      console.error('Failed to toggle save:', error);\r\n      setUser(originalUser); // Rollback\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    login,\r\n    register,\r\n    logout,\r\n    reFetchUser,\r\n    showLoginModal,\r\n    setShowLoginModal,\r\n    showRegisterModal,\r\n    setShowRegisterModal,\r\n    // --- ADD NEW VALUES ---\r\n    isArticleLiked,\r\n    isArticleSaved,\r\n    toggleLike,\r\n    toggleSave\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}