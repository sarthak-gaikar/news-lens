{"ast":null,"code":"import api from './api';\nexport const newsService = {\n  async getPublicNewsFeed(filters = {}) {\n    const params = new URLSearchParams();\n    Object.keys(filters).forEach(key => {\n      if (filters[key]) {\n        params.append(key, filters[key]);\n      }\n    });\n    const response = await api.get(`/news/public-feed?${params}`);\n    return response.data;\n  },\n  async getNewsFeed(filters = {}) {\n    const params = new URLSearchParams();\n    Object.keys(filters).forEach(key => {\n      if (filters[key]) {\n        params.append(key, filters[key]);\n      }\n    });\n    const response = await api.get(`/news/feed?${params}`);\n    return response.data;\n  },\n  async getCategories() {\n    const response = await api.get('/news/categories');\n    return response.data.data;\n  },\n  async getSources() {\n    const response = await api.get('/news/sources');\n    return response.data.data;\n  },\n  async getBiasStats() {\n    const response = await api.get('/news/bias-stats');\n    return response.data.data;\n  },\n  async refreshNews() {\n    const response = await api.get('/news/refresh');\n    return response.data;\n  },\n  async getArticle(id) {\n    const response = await api.get(`/news/article/${id}`);\n    return response.data.data;\n  },\n  async trackInteraction(articleId, interaction) {\n    const response = await api.post('/users/interaction', {\n      articleId,\n      interaction\n    });\n    return response.data;\n  }\n};","map":{"version":3,"names":["api","newsService","getPublicNewsFeed","filters","params","URLSearchParams","Object","keys","forEach","key","append","response","get","data","getNewsFeed","getCategories","getSources","getBiasStats","refreshNews","getArticle","id","trackInteraction","articleId","interaction","post"],"sources":["C:/Projects/NEWSLENS/client/src/services/news.js"],"sourcesContent":["import api from './api';\r\n\r\nexport const newsService = {\r\n  async getPublicNewsFeed(filters = {}) {\r\n    const params = new URLSearchParams();\r\n    Object.keys(filters).forEach(key => {\r\n      if (filters[key]) {\r\n        params.append(key, filters[key]);\r\n      }\r\n    });\r\n    \r\n    const response = await api.get(`/news/public-feed?${params}`);\r\n    return response.data;\r\n  },\r\n  \r\n  async getNewsFeed(filters = {}) {\r\n    const params = new URLSearchParams();\r\n    Object.keys(filters).forEach(key => {\r\n      if (filters[key]) {\r\n        params.append(key, filters[key]);\r\n      }\r\n    });\r\n    \r\n    const response = await api.get(`/news/feed?${params}`);\r\n    return response.data;\r\n  },\r\n\r\n  async getCategories() {\r\n    const response = await api.get('/news/categories');\r\n    return response.data.data;\r\n  },\r\n\r\n  async getSources() {\r\n    const response = await api.get('/news/sources');\r\n    return response.data.data;\r\n  },\r\n\r\n  async getBiasStats() {\r\n    const response = await api.get('/news/bias-stats');\r\n    return response.data.data;\r\n  },\r\n\r\n  async refreshNews() {\r\n    const response = await api.get('/news/refresh');\r\n    return response.data;\r\n  },\r\n\r\n  async getArticle(id) {\r\n    const response = await api.get(`/news/article/${id}`);\r\n    return response.data.data;\r\n  },\r\n\r\n  async trackInteraction(articleId, interaction) {\r\n    const response = await api.post('/users/interaction', { articleId, interaction });\r\n    return response.data;\r\n  }\r\n};"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,OAAO,MAAMC,WAAW,GAAG;EACzB,MAAMC,iBAAiBA,CAACC,OAAO,GAAG,CAAC,CAAC,EAAE;IACpC,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;IACpCC,MAAM,CAACC,IAAI,CAACJ,OAAO,CAAC,CAACK,OAAO,CAACC,GAAG,IAAI;MAClC,IAAIN,OAAO,CAACM,GAAG,CAAC,EAAE;QAChBL,MAAM,CAACM,MAAM,CAACD,GAAG,EAAEN,OAAO,CAACM,GAAG,CAAC,CAAC;MAClC;IACF,CAAC,CAAC;IAEF,MAAME,QAAQ,GAAG,MAAMX,GAAG,CAACY,GAAG,CAAC,qBAAqBR,MAAM,EAAE,CAAC;IAC7D,OAAOO,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMC,WAAWA,CAACX,OAAO,GAAG,CAAC,CAAC,EAAE;IAC9B,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;IACpCC,MAAM,CAACC,IAAI,CAACJ,OAAO,CAAC,CAACK,OAAO,CAACC,GAAG,IAAI;MAClC,IAAIN,OAAO,CAACM,GAAG,CAAC,EAAE;QAChBL,MAAM,CAACM,MAAM,CAACD,GAAG,EAAEN,OAAO,CAACM,GAAG,CAAC,CAAC;MAClC;IACF,CAAC,CAAC;IAEF,MAAME,QAAQ,GAAG,MAAMX,GAAG,CAACY,GAAG,CAAC,cAAcR,MAAM,EAAE,CAAC;IACtD,OAAOO,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAME,aAAaA,CAAA,EAAG;IACpB,MAAMJ,QAAQ,GAAG,MAAMX,GAAG,CAACY,GAAG,CAAC,kBAAkB,CAAC;IAClD,OAAOD,QAAQ,CAACE,IAAI,CAACA,IAAI;EAC3B,CAAC;EAED,MAAMG,UAAUA,CAAA,EAAG;IACjB,MAAML,QAAQ,GAAG,MAAMX,GAAG,CAACY,GAAG,CAAC,eAAe,CAAC;IAC/C,OAAOD,QAAQ,CAACE,IAAI,CAACA,IAAI;EAC3B,CAAC;EAED,MAAMI,YAAYA,CAAA,EAAG;IACnB,MAAMN,QAAQ,GAAG,MAAMX,GAAG,CAACY,GAAG,CAAC,kBAAkB,CAAC;IAClD,OAAOD,QAAQ,CAACE,IAAI,CAACA,IAAI;EAC3B,CAAC;EAED,MAAMK,WAAWA,CAAA,EAAG;IAClB,MAAMP,QAAQ,GAAG,MAAMX,GAAG,CAACY,GAAG,CAAC,eAAe,CAAC;IAC/C,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMM,UAAUA,CAACC,EAAE,EAAE;IACnB,MAAMT,QAAQ,GAAG,MAAMX,GAAG,CAACY,GAAG,CAAC,iBAAiBQ,EAAE,EAAE,CAAC;IACrD,OAAOT,QAAQ,CAACE,IAAI,CAACA,IAAI;EAC3B,CAAC;EAED,MAAMQ,gBAAgBA,CAACC,SAAS,EAAEC,WAAW,EAAE;IAC7C,MAAMZ,QAAQ,GAAG,MAAMX,GAAG,CAACwB,IAAI,CAAC,oBAAoB,EAAE;MAAEF,SAAS;MAAEC;IAAY,CAAC,CAAC;IACjF,OAAOZ,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}